1.单向链表的存储结构
	C语言中的单向链表存储结构描述：
     —————单向链表的存储结构————————
	typedef struct LNode  {
		ElemType  data;                  /* 存放结点中的数据信息*/
   		Struct  Lnode *next;               /*指向下一个结点地址的指针*/
	} LNode, *LinkList;                       /* LinkList 即struct LNode *类型*/

2.单向链表的基本操作
（1）初始化操作：为链表设置一个头结点，头结点的data数据域不赋任何值，头结点的指针域next则为空。
（2）销毁操作：将链表中包括头结点在内的所有结点依次全部删除，结点所占空间释放给系统。
（3）清空操作：将链表的指针域next设为空。
（4）求链表中元素的个数操作：从链表的第一个结点开始计算出链表中结点的个数。
（5）输出操作：依次输出L 中的每一个数据元素的值。
（6）定位操作：查找数据值与给定值e相同的第一个结点，并将结点在链表中的为序值返回，若链表中不存在该结点，则返回0。
（7）插入操作：在第i个结点前插入新的结点。首先要找到指定的位置，然后定义一个新的结点，最后将结点插入到指定位置。
（8）删除操作：删除链表中第i个结点。首先要找到指定的位置，即用指针p定位到一个结点，然后指针q指向p的后一个结点，接着将p指向的结点与q后一个结点相连，最后将q指向的结点删除。

3.运行结果清单
(1)初始化顺序表L
(2)依次采用尾插法插入a，b，c，d，e元素
(3)输出顺序表L：abcde
(4)顺序表L长度=5
(5)顺序表L为非空
(6)顺序表L 的第3个元素=c
(7)元素c的位置=3
(8)输出顺序表L：abcfde
(9)删除L的第4个元素
(10)输出顺序表L：abce
(11)释放顺序表L